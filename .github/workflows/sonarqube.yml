name: SonarQube complete workflow
on:
  workflow_call:
    inputs:
      ref:
        required: false
        type: string
      source_folder:
        type: string
        required: false
        default: "api"
    secrets:
      CI_BOT_TOKEN:
        required: true
      GREEN_SONAR_TOKEN:
        required: true
      GREEN_SONAR_HOST_URL:
        required: true
jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: [self-hosted, shared]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - uses: actions/download-artifact@v3
        with:
          name: coverage_reports # retrieve the coverage reports from previous job
          path: ./coverage/
      - name: Fix coverage path in coverage reports
        run: |
          # point the source path of all reports to the /github/workspace local directory of the sonarcloud container
          cd coverage && find . -type f -name '*.xml' -exec sed -i".backup" 's/<source>.*<\/source>/<source>\/github\/workspace\/${{ inputs.source_folder }}<\/source>/g' {} \;
          for file in $(find . -type f -name "*.xml"); do
            diff -u ${file}.backup ${file} || true
            rm ${file}.backup
          done
      - name: Configure SonarQube (coverage report paths)
        run: |
          # for debugging purposes: list all coverage reports
          ls ./coverage/
          # transform this list into a string (paths separated with non-trailing ',')
          coverage_files=$(find ./coverage/ -type f -maxdepth 1 | tr '\n' ',' | sed 's%,*$%%')
          cp sonar-project.properties sonar-project.properties.backup
          echo sonar.python.coverage.reportPaths=${coverage_files} >> sonar-project.properties
          echo ${coverage_files}
          diff -u sonar-project.properties.backup sonar-project.properties || true
          rm sonar-project.properties.backup
      - uses: sonarsource/sonarqube-scan-action@master
        if: ${{ always() }}
        env:
          GITHUB_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.GREEN_SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.GREEN_SONAR_HOST_URL }}
