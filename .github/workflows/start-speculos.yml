name: Start speculos instance
on:
  workflow_call:
    inputs:
      coin_app:
        description: Coin application to run
        required: true
        type: string
      coin_app_version:
        description: The version of the coin application
        required: true
        type: string
      device:
        description: The device to emulate (nanox, nanos, nanos+, flex, stax)
        required: true
        type: string
      device_os_version:
        description: The version of the device OS
        required: true
        type: string
      seed:
        description: The seed to use for the device
        required: true
        type: string
      additional_args:
        description: Additional arguments for speculos
        required: false
        type: string
      cluster:
        description: Cluster where to launch the speculos instance
        required: true
        type: string
      aws_role:
        description: AWS role to assume
        required: true
        type: string
      aws_region:
        description: AWS region
        required: false
        type: string
        default: eu-west-1
      run_id:
        description: Unique ID for the workflow run
        required: false
        type: string
        default: ${{ github.run_id }}
    outputs:
      run_id:
        description: Unique ID for the workflow run
        value: ${{ jobs.start-speculos.outputs.run_id }}
      speculos_url:
        description: URL of the speculos instance
        value: ${{ jobs.start-speculos.outputs.speculos_url }}
  workflow_dispatch:
    inputs:
      coin_app:
        description: Coin application to run
        required: true
        type: string
      coin_app_version:
        description: The version of the coin application
        required: true
        type: string
      device:
        description: The device to emulate (nanox, nanos, nanos+, flex, stax)
        required: true
        type: string
      device_os_version:
        description: The version of the device OS
        required: true
        type: string
      seed:
        description: The seed to use for the device
        required: true
        type: string
      additional_args:
        description: Additional arguments for speculos
        required: false
        type: string
      cluster:
        description: Cluster where to launch the speculos instance
        required: true
        type: string
      aws_role:
        description: AWS role to assume
        required: true
        type: string
      aws_region:
        description: AWS region
        required: false
        type: string
        default: eu-west-1
      run_id:
        description: Unique ID for the workflow run
        required: false
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  start-speculos:
    runs-on: speculos
    outputs:
      speculos_url: ${{ steps.set-outputs.outputs.speculos_url }}
      run_id: ${{ steps.set-outputs.outputs.run_id }}
    steps:
      - name: Set mask sensitive data
        shell: bash
        run: |
          echo ::add-mask::${{ inputs.seed }}
          echo ::add-mask::${{ inputs.cluster }}
          echo ::add-mask::${{ inputs.aws_role }}
      - name: Prepare additional args
        if: ${{ inputs.additional_args != '' }}
        shell: bash
        run: |
          {
            echo 'ADDITIONAL_ARGS<<EOF'
            echo ${{ inputs.additional_args }} | sed 's/^\(.*\)/"\1",/' | sed 's/ /",\n"/g'
            echo EOF
          } >> $GITHUB_ENV
      - name: Set valid device name
        shell: bash
        run: |
          if [[ ${{ inputs.device}} == 'nanos+' ]]; then
            echo "DEVICE=nanosp" >> $GITHUB_ENV
          else
            echo "DEVICE=${{ inputs.device }}" >> $GITHUB_ENV
          fi
      - name: Correct coin app name
        shell: bash
        run: |
          echo "COIN_APP=$( echo ${{ inputs.coin_app }} | sed 's/ //g')" >> $GITHUB_ENV
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws_role }}
          aws-region: ${{ inputs.aws_region }}
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ inputs.cluster }} --region ${{ inputs.aws_region }}
      - name: Run Speculos
        shell: bash
        run: |
          kubectl -n speculos run speculos-${{ inputs.run_id }} --image=ghcr.io/ledgerhq/speculos:master --restart=Never --overrides="$(cat <<EOF
          {
            "apiVersion": "v1",
            "metadata": {
              "labels": {
                "run-id": "${{ inputs.run_id }}"
              }
            },
            "spec": {
              "volumes": [
                {
                  "name": "coin-apps",
                  "emptyDir": {}
                }
              ],
              "initContainers": [
                {
                  "name": "init-coin-apps",
                  "image": "bash:5.2.37",
                  "command": [
                    "bash"
                  ],
                  "args": [
                    "-c",
                    "wget -q --header \"Authorization: token \$GITHUB_TOKEN\" --header 'Accept: application/vnd.github.v3.raw' https://api.github.com/repos/ledgerHQ/pe-sandbox/contents/init-coin-apps.sh?ref=main -O /dev/stdout | bash"
                  ],
                  "env": [
                    {
                      "name": "GITHUB_TOKEN",
                      "valueFrom": {
                        "secretKeyRef": {
                          "name": "github-auth",
                          "key": "GITHUB_TOKEN"
                        }
                      }
                    },
                    {
                      "name": "ADDITIONAL_ARGS",
                      "value": "${{ inputs.additional_args }}"
                    },
                    {
                      "name": "DEVICE",
                      "value": "${{ inputs.device }}"
                    },
                    {
                      "name": "DEVICE_OS_VERSION",
                      "value": "${{ inputs.device_os_version }}"
                    },
                    {
                      "name": "COIN_APP",
                      "value": "${{ inputs.coin_app }}"
                    },
                    {
                      "name": "COIN_APP_VERSION",
                      "value": "${{ inputs.coin_app_version }}"
                    }
                  ],
                  "volumeMounts": [
                    {
                      "name": "coin-apps",
                      "mountPath": "/apps"
                    }
                  ]
                }
              ],
              "containers": [
                {
                  "name": "speculos",
                  "image": "ghcr.io/ledgerhq/speculos:master",
                  "args": [
                    "/apps/${{ inputs.device }}/${{ inputs.device_os_version }}/${{ inputs.coin_app }}/app_${{ inputs.coin_app_version }}.elf",
                    ${{ env.ADDITIONAL_ARGS }}
                    "--model",
                    "${{ env.DEVICE }}",
                    "--display",
                    "headless",
                    "--seed",
                    "${{ inputs.seed }}"
                  ],
                  "env": [
                    {
                      "name": "SPECULOS_APPNAME",
                      "value": "${{ inputs.coin_app }}:${{ inputs.coin_app_version }}"
                    }
                  ],
                  "ports": [
                    {
                      "containerPort": 5000,
                      "name": "http"
                    }
                  ],
                  "volumeMounts": [
                    {
                      "name": "coin-apps",
                      "mountPath": "/apps"
                    }
                  ]
                }
              ]
            }
          }
          EOF
          )"
      - name: Create service
        shell: bash
        run: |
          kubectl -n speculos expose pod/speculos-${{ inputs.run_id }} --type=ClusterIP --port=5000 --target-port=http --name=speculos-${{ inputs.run_id }} --selector="run-id=${{ inputs.run_id }}"
      - name: Create ingress
        shell: bash
        run: |
          kubectl -n speculos create ingress speculos-${{ inputs.run_id }} --class="trusted" --rule="${{ inputs.run_id }}.speculos.aws.stg.ldg-tech.com/=speculos-${{ inputs.run_id }}:5000" --dry-run=client -o yaml | kubectl label --local -f - run-id=${{ inputs.run_id }} -o yaml | sed 's/pathType: .*/pathType: ImplementationSpecific/' | kubectl apply -f -
      - name: Wait for speculos to become available
        shell: bash
        run: |
          while ! kubectl -n speculos wait --for=condition=Ready --timeout=60s pods/speculos-${{ inputs.run_id }}; do sleep 1; done
          while ! curl -skI https://${{ inputs.run_id }}.speculos.aws.stg.ldg-tech.com | grep '^HTTP/2 200'; do sleep 5; done
      - name: Set outputs
        id: set-outputs
        shell: bash
        run: |
          kubectl -n speculos logs -l run-id=${{ inputs.run_id }} -c speculos
          echo "speculos_url=https://${{ inputs.run_id }}.speculos.aws.stg.ldg-tech.com" >> $GITHUB_OUTPUT
          if [[ ${{ inputs.run_id }} == '' ]]; then
            echo "run_id=${{ github.run_id }}" >> $GITHUB_OUTPUT
          else
            echo "run_id=${{ inputs.run_id }}" >> $GITHUB_OUTPUT
          fi
      - name: Clean up
        if: ${{ failure() || cancelled()}}
        shell: bash
        run: |
          kubectl -n speculos delete pod,ingress,service -l run-id="${{ inputs.run_id }}" --ignore-not-found=true
