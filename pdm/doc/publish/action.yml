name: Publish documentation
description: Publish the documentation

inputs:
  version:
    description: Force a version to be built
    required: false
  openapi:
    description: Has OpenAPI specs
    default: false
  site:
    description: Publish a documentation site
    default: false
  pypi-token:
    description: A read token for private PyPI access
    required: false
  init:
    description: Clone & sync
    default: true

outputs:
  url:
    description: The published documentation URL
    value: ${{ steps.summary.outputs.url }}

runs:
  using: composite
  steps:
    - name: Clone and install dependencies
      if: inputs.init == 'true'
      uses: LedgerHQ/actions/pdm/init@main
      with:
        group: docs
        history: true
        pypi-token: ${{ inputs.pypi-token }}

    - uses: actions/download-artifact@v4
      with:
        name: changelog
    
    - uses: actions/download-artifact@v4
      if: inputs.openapi == 'true'
      with:
        name: openapi
        path: docs

    - name: Deploy the documentation site (main)
      if: inputs.site == 'true' && github.ref == 'refs/heads/main'
      run: pdm doc:deploy --push --update-aliases main latest
      env:
        FORCE_COLOR: true
      shell: bash

    - name: Deploy the documentation site (tag)
      if: inputs.site == 'true' && inputs.version || startsWith(github.ref, 'refs/tags')
      run: pdm doc:deploy --push ${{ inputs.version || github.head_ref || github.ref_name }}
      env:
        FORCE_COLOR: true
      shell: bash

    - name: Publish summary
      id: summary
      if: inputs.site == 'true'
      run: |
        version=${{ inputs.version || github.ref == 'refs/heads/main' && 'latest' || github.head_ref || github.ref_name }}
        url="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${version}"
        echo "url=${url}" >> $GITHUB_OUTPUT
        echo "ðŸ“– A new documentation has been published: ${url}" >> $GITHUB_STEP_SUMMARY
      shell: bash
