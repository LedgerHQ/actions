name: Initialize `pdm`
description: Install Python and `pdm` with cache and extract metadata

inputs:
  python-version:
    description: Python version to use
    required: true
    default: "3.11"
  group:
    description: Dependency group(s) to install
    default: ''
  exclude-group:
    description: Dependency group(s) to exclude from install
    default: ''
  history:
    description: Fetch the full history
    required: false
    default: false
  pypi-token:
    description: Private PyPI token (read)
    required: false
    default: ""
  github-token:
    description: A Github token with proper permissions
    required: false
    default: ${{ github.token }}

runs:
  using: composite
  steps:
    - name: Clone
      uses: actions/checkout@v4
      with:
        token: ${{ inputs.github-token }}
        fetch-depth: ${{ inputs.history == 'true' && '0' || '1' }}

    - name: Setup git
      run: |
        git config user.name github-actions
        git config user.email github-actions@ledger.fr
      shell: bash

    - name: Set up Python and PDM
      uses: pdm-project/setup-pdm@v4
      with:
        python-version: ${{ inputs.python-version }}
        cache: true

    - name: Set some settings
      run: |
        pdm config install.cache true
      shell: bash

    - name: Install dependencies (main, all extras and specified dev group)
      run: |
        echo "${{ github.workspace }}/.venv/bin/python" > .pdm-python
        params=(--group :all --dev)
        [ -z "${GROUPS}" ] || params+=(--group ${GROUPS})
        [ -z "${EXCLUDED_GROUPS}" ] || params+=(--without ${EXCLUDED_GROUPS})
        pdm sync "${params[@]}"
      env:
        PYPI_DEPLOY_TOKEN: ${{ inputs.pypi-token }}
        GROUPS: ${{ inputs.group }}
        EXCLUDED_GROUPS: ${{ inputs.exclude-group }}
      shell: bash
