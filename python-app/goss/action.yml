name: Goss
description: Test image with Goss

inputs:
  GOSS_IMAGE:
    description: "name used for goss temporary image"
    required: true
  GOSS_FILES_PATH:
    description: "path to goss file"
    required: true

runs:
  using: "composite"

  steps:
    - name: check for goss file
      id: goss_file
      run: |
        if [[ -d ${{ inputs.GOSS_FILES_PATH }} ]]; then
          echo "goss_enabled=true" >> $GITHUB_OUTPUT
        else
          echo "goss_enabled=false" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - if: ${{ steps.goss_file.outputs.goss_enabled == 'true' }}
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - if: ${{ steps.goss_file.outputs.goss_enabled == 'true' }}
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3


    - if: ${{ steps.goss_file.outputs.goss_enabled == 'true' }}
      name: Build docker image
      id: docker_build
      uses: docker/build-push-action@v6
      with:
        tags: ${{ inputs.GOSS_IMAGE }}
        load: true
        # See: https://docs.docker.com/build/ci/github-actions/secrets/
        # `Dockerfile` can mount and use the secret at: /run/secrets/PYPI_DEPLOY_TOKEN
        secrets: |
          PYPI_DEPLOY_TOKEN=${{ env.PYPI_DEPLOY_TOKEN }}
        build-args: |
          PYPI_DEPLOY_TOKEN=${{ env.PYPI_DEPLOY_TOKEN }}

    - if: ${{ steps.goss_file.outputs.goss_enabled == 'true' }}
      name: Install Goss
      uses: e1himself/goss-installation-action@v1.2.1

    - if: ${{ steps.goss_file.outputs.goss_enabled == 'true' }}
      name: Run GOSS validation
      id: goss
      run: dgoss run --network "host" ${{ inputs.GOSS_IMAGE }}
      env:
        GOSS_FILES_PATH: ${{ inputs.GOSS_FILES_PATH }}
        CONTAINER_LOG_OUTPUT: ${{ runner.temp }}/goss.log
      shell: bash

    - if: failure() && steps.goss.conclusion == 'failure'
      run: cat ${{ runner.temp }}/goss.log
      shell: bash
