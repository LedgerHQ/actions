name: Goss
description: Test image with Goss

inputs:
  GOSS_IMAGE:
    description: "name used for goss temporary image"
    required: true
  GOSS_FILES_PATH:
    description: "path to goss file"
    required: true

runs:
  using: "composite"

  steps:
    - name: Clone
      uses: actions/checkout@v3

    - name: check for goss file
      id: goss_file
      run: |
        if [[ -d ${{ inputs.GOSS_FILES_PATH }} ]]; then
          echo goss_enabled=true >> $GITHUB_ENV
        else
          echo goss_enabled=false >> $GITHUB_ENV
        fi
      shell: bash

    - if: ${{ env.goss_enabled == 'true' }}
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - if: ${{ env.goss_enabled == 'true' }}
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - if: ${{ env.goss_enabled == 'true' }}
      name: Build docker image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        tags: ${{ inputs.GOSS_IMAGE }}
        load: true
        build-args: PYPI_DEPLOY_TOKEN=${{ env.PYPI_DEPLOY_TOKEN }}


    - if: ${{ env.goss_enabled == 'true' }}
      name: Install Goss
      uses: e1himself/goss-installation-action@v1.0.3

    - if: ${{ env.goss_enabled == 'true' }}
      name: Run GOSS validation
      run: dgoss run ${{ inputs.GOSS_IMAGE }}
      env:
        GOSS_FILES_PATH: ${{ inputs.GOSS_FILES_PATH }}
      shell: bash
