name: Build
description: Build and publish image

inputs:
  build-args:
    description: "args to pass to docker build"
    required: false
    default: ""

outputs:
  version:
    description: "Computed Semantic version."
    value: ${{ steps.compute-semantic-version.outputs.semver }}


runs:
  using: "composite"

  steps:
    - name: Check if step is needed
      id: check-docker
      run: |
        #echo "is-docker-needed=${{ startsWith(github.ref, 'refs/tags/') || startsWith(github.head_ref, 'feature/') || github.ref == 'refs/heads/main' }}" >> $GITHUB_OUTPUT
        echo "is-docker-needed=true" >> $GITHUB_OUTPUT
      shell: bash

    - if: ${{ steps.check-docker.outputs.is-docker-needed == 'true' }}
      name: Clone
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # needed for VERSION

    - if: ${{ steps.check-docker.outputs.is-docker-needed == 'true' }}
      name: Info for build
      run: |
        # lowercase image name
        echo IMAGE="ghcr.io/${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
        echo VERSION=$(git describe --tags) >> $GITHUB_ENV
      shell: bash

    - if: ${{ steps.check-docker.outputs.is-docker-needed == 'true' }}
      name: Semantic Version preparation
      id: compute-semantic-version
      env:
        REF: ${{ github.event.pull_request && github.head_ref || github.ref_name }}
      run: |
        if [[ $REF =~ ^[0-9]+\.[0-9]+\.[0-9]+(.*)$ ]]; then
          echo "semver=$REF" >> ${GITHUB_OUTPUT}
        else
          echo "semver=0.0.0-${REF//[\/_]/-}" >> ${GITHUB_OUTPUT}
        fi
      shell: bash

    - if: ${{ steps.check-docker.outputs.is-docker-needed == 'true' }}
      name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.IMAGE }}
        flavor: |
            latest=false
        tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{steps.compute-semantic-version.outputs.semver}}

    - if: ${{ steps.check-docker.outputs.is-docker-needed == 'true' }}
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - if: ${{ steps.check-docker.outputs.is-docker-needed == 'true' }}
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - if: ${{ steps.check-docker.outputs.is-docker-needed == 'true' }}
      name: Build and push
      id: docker_build
      uses: docker/build-push-action@v4
      with:
        context: .
        # See: https://docs.docker.com/build/ci/github-actions/secrets/
        # `Dockerfile` can mount and use the secret at: /run/secrets/PYPI_DEPLOY_TOKEN
        secrets: |
          PYPI_DEPLOY_TOKEN=${{ env.PYPI_DEPLOY_TOKEN }}
        build-args: |
          ${{ inputs.build-args }}
          PYPI_DEPLOY_TOKEN=${{ env.PYPI_DEPLOY_TOKEN }}
          VERSION=${{ env.VERSION }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: true
